//     Underscore.js 1.13.0-0
//     https://underscorejs.org
//     (c) 2009-2020 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

var f = require('./underscore-node-f.cjs');

// Named Exports

var allExports = {
         __proto__: null,
         VERSION: f.VERSION,
         restArguments: f.restArguments,
         isObject: f.isObject,
         isNull: f.isNull,
         isUndefined: f.isUndefined,
         isBoolean: f.isBoolean,
         isElement: f.isElement,
         isString: f.isString,
         isNumber: f.isNumber,
         isDate: f.isDate,
         isRegExp: f.isRegExp,
         isError: f.isError,
         isSymbol: f.isSymbol,
         isArrayBuffer: f.isArrayBuffer,
         isDataView: f.isDataView,
         isArray: f.isArray,
         isFunction: f.isFunction,
         isArguments: f.isArguments,
         isFinite: f.isFinite,
         isNaN: f.isNaN,
         isTypedArray: f.isTypedArray,
         isEmpty: f.isEmpty,
         isMatch: f.isMatch,
         isEqual: f.isEqual,
         isMap: f.isMap,
         isWeakMap: f.isWeakMap,
         isSet: f.isSet,
         isWeakSet: f.isWeakSet,
         keys: f.keys,
         allKeys: f.allKeys,
         values: f.values,
         pairs: f.pairs,
         invert: f.invert,
         functions: f.functions,
         methods: f.functions,
         extend: f.extend,
         extendOwn: f.extendOwn,
         assign: f.extendOwn,
         defaults: f.defaults,
         create: f.create,
         clone: f.clone,
         tap: f.tap,
         get: f.get,
         has: f.has,
         mapObject: f.mapObject,
         identity: f.identity,
         constant: f.constant,
         noop: f.noop,
         toPath: f.toPath,
         property: f.property,
         propertyOf: f.propertyOf,
         matcher: f.matcher,
         matches: f.matcher,
         times: f.times,
         random: f.random,
         now: f.now,
         escape: f._escape,
         unescape: f._unescape,
         templateSettings: f.templateSettings,
         template: f.template,
         result: f.result,
         uniqueId: f.uniqueId,
         chain: f.chain,
         iteratee: f.iteratee,
         partial: f.partial,
         bind: f.bind,
         bindAll: f.bindAll,
         memoize: f.memoize,
         delay: f.delay,
         defer: f.defer,
         throttle: f.throttle,
         debounce: f.debounce,
         wrap: f.wrap,
         negate: f.negate,
         compose: f.compose,
         after: f.after,
         before: f.before,
         once: f.once,
         findKey: f.findKey,
         findIndex: f.findIndex,
         findLastIndex: f.findLastIndex,
         sortedIndex: f.sortedIndex,
         indexOf: f.indexOf,
         lastIndexOf: f.lastIndexOf,
         find: f.find,
         detect: f.find,
         findWhere: f.findWhere,
         each: f.each,
         forEach: f.each,
         map: f.map,
         collect: f.map,
         reduce: f.reduce,
         foldl: f.reduce,
         inject: f.reduce,
         reduceRight: f.reduceRight,
         foldr: f.reduceRight,
         filter: f.filter,
         select: f.filter,
         reject: f.reject,
         every: f.every,
         all: f.every,
         some: f.some,
         any: f.some,
         contains: f.contains,
         includes: f.contains,
         include: f.contains,
         invoke: f.invoke,
         pluck: f.pluck,
         where: f.where,
         max: f.max,
         min: f.min,
         shuffle: f.shuffle,
         sample: f.sample,
         sortBy: f.sortBy,
         groupBy: f.groupBy,
         indexBy: f.indexBy,
         countBy: f.countBy,
         partition: f.partition,
         toArray: f.toArray,
         size: f.size,
         pick: f.pick,
         omit: f.omit,
         first: f.first,
         head: f.first,
         take: f.first,
         initial: f.initial,
         last: f.last,
         rest: f.rest,
         tail: f.rest,
         drop: f.rest,
         compact: f.compact,
         flatten: f.flatten,
         without: f.without,
         uniq: f.uniq,
         unique: f.uniq,
         union: f.union,
         intersection: f.intersection,
         difference: f.difference,
         unzip: f.unzip,
         transpose: f.unzip,
         zip: f.zip,
         object: f.object,
         range: f.range,
         chunk: f.chunk,
         mixin: f.mixin,
         'default': f._
};

// Default Export

// Add all of the Underscore functions to the wrapper object.
var _ = f.mixin(allExports);
// Legacy Node.js API.
_._ = _;

module.exports = _;
//# sourceMappingURL=underscore-node.cjs.map
